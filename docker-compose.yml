version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${SERVICE_NAME}-app
    env_file:
      - envs/.env.dev
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres-${SERVICE_NAME}
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis-${SERVICE_NAME}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-${SERVICE_NAME}
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-${SERVICE_NAME}
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

    depends_on:
      - zookeeper

volumes:
  pgdata:
